ARG UBUNTU_VERSION=22.04

FROM ubuntu:${UBUNTU_VERSION} AS build

# Rust toolchain version
ARG RUST_TOOLCHAIN=stable

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            build-essential \
            curl \
            pkg-config \
            libssl-dev \
            protobuf-compiler \
            git \
            cmake \
            unzip \
            ca-certificates \
            && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain ${RUST_TOOLCHAIN} -y
ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /root/workspace

RUN mkdir -p /opt/tabby/bin
RUN mkdir -p /opt/tabby/lib
RUN mkdir -p target

COPY . .

# Build without CUDA
RUN cargo build --no-default-features --features prod --release --package tabby && \
    mv target/release/tabby /opt/tabby/bin/ && \
    ln -s /opt/tabby/bin/tabby /opt/tabby/bin/tabby-cpu && \
    rm -rf target

FROM ubuntu:${UBUNTU_VERSION} AS runtime

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        curl \
        unzip \
        openssh-client \
        ca-certificates \
        libgomp1 \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install katana
RUN curl -L https://github.com/projectdiscovery/katana/releases/download/v1.1.2/katana_1.1.2_linux_amd64.zip -o katana.zip \
  && unzip katana.zip katana \
  && mv katana /usr/bin/ \
  && rm katana.zip

# Disable safe directory in docker
RUN git config --system --add safe.directory "*"

COPY --from=build /opt/tabby /opt/tabby

ENV PATH="$PATH:/opt/tabby/bin"
ENV TABBY_ROOT=/data

ENTRYPOINT ["/opt/tabby/bin/tabby"]
